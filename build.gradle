buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

sourceCompatibility = targetCompatibility = "1.8"
version = "1.12.2-" + getVersion("VERSION")
group = "minechem"
archivesBaseName = "MineChem"

minecraft {
    version = "1.12.2-14.23.2.2653"
    runDir = "run"
    mappings = "snapshot_20171003"
}

repositories {
    mavenCentral()
    maven {
        name 'CB Repo'
        url "http://chickenbones.net/maven"
    }
	maven {
		name = "progwml6"
		url = "http://dvs1.progwml6.com/files/maven"
	}
}

dependencies {
	//deobfCompile "codechicken:CodeChickenCore:1.10.2-2.4.1.102:universal"
	deobfCompile "mezz.jei:jei_1.12.2:+"
	//deobfCompile "codechicken:CodeChickenLib:1.12.2-3.1.5.334:universal"
}

task apiJar(type: Jar) {
	classifier = 'api'
	from sourceSets.api.output
	from sourceSets.api.allJava
}

artifacts {
	archives apiJar
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
	rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
	manifest {
	    attributes 'FMLAT': 'minechem_at.cfg'
	}
}

String getVersion(String type) {
	String major = "0";
	String revision = "0";
	String patch = "0";
	String prefix = "public static final String $type = \"";
	File file = file("src/main/java/minechem/init/ModGlobals.java")
	file.eachLine { String s ->
		s = s.trim();
		if (s.startsWith(prefix)) {
			s = s.substring(prefix.length(), s.length() - 2);
			String[] pts = s.split("\\.");

			major = pts[0];
			revision = pts[1];
			patch = pts[2];
		}
	}
	return "$major.$revision.$patch";
}
